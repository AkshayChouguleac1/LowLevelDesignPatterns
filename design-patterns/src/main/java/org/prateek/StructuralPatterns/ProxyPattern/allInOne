// 1. Subject
interface Image {
    void display();
}

// 2. RealSubject (heavy object)
class RealImage implements Image {
    private String fileName;

    public RealImage(String fileName) {
        this.fileName = fileName;
        loadFromDisk(); // Expensive operation
    }

    private void loadFromDisk() {
        System.out.println("Loading " + fileName);
    }

    @Override
    public void display() {
        System.out.println("Displaying " + fileName);
    }
}

// 3. Proxy
class ProxyImage implements Image {
    private RealImage realImage;
    private String fileName;

    public ProxyImage(String fileName) {
        this.fileName = fileName;
    }

    @Override
    public void display() {
        if (realImage == null) { 
            // Lazy initialization
            realImage = new RealImage(fileName);
        }
        realImage.display();
    }
}

// 4. Client
public class ProxyPatternDemo {
    public static void main(String[] args) {
        Image image = new ProxyImage("photo.png");

        // Image is loaded only when display() is called
        System.out.println("First call:");
        image.display();

        System.out.println("\nSecond call:");
        image.display(); // This time it won't load again
    }
}
